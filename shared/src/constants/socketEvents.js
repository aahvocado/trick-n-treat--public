/**
 * @typedef {String} SocketEvent - event names
 */
export const SOCKET_EVENT = {
  LOBBY: {
    TO_CLIENT: {
      UPDATE: 'SOCKET_EVENT.LOBBY.TO_CLIENT.UPDATE',
      SET_CLIENTTYPE: 'SOCKET_EVENT.LOBBY.TO_CLIENT.SET_CLIENTTYPE',
    },
    TO_SERVER: {
      JOIN: 'SOCKET_EVENT.LOBBY.TO_SERVER.JOIN',
      START: 'SOCKET_EVENT.LOBBY.TO_SERVER.START',
      REJOIN: 'SOCKET_EVENT.LOBBY.TO_SERVER.REJOIN',
      READY: 'SOCKET_EVENT.LOBBY.TO_SERVER.READY',
      UNREADY: 'SOCKET_EVENT.LOBBY.TO_SERVER.UNREADY',
    },
  },

  GAME: {
    TO_CLIENT: {
      UPDATE: 'SOCKET_EVENT.GAME.TO_CLIENT.UPDATE',
      MY_CHARACTER: 'SOCKET_EVENT.GAME.TO_CLIENT.MY_CHARACTER',

      ENCOUNTER: 'SOCKET_EVENT.GAME.TO_CLIENT.ENCOUNTER',
      CLOSE_ENCOUNTER: 'SOCKET_EVENT.GAME.TO_CLIENT.CLOSE_ENCOUNTER',

      COMPLETE: 'SOCKET_EVENT.GAME.TO_CLIENT.COMPLETE',
      END: 'SOCKET_EVENT.GAME.TO_CLIENT.END',
    },
    TO_SERVER: {
      CHOSE_ACTION: 'SOCKET_EVENT.GAME.TO_SERVER.CHOSE_ACTION',
      END_TURN: 'SOCKET_EVENT.GAME.TO_SERVER.END_TURN',
      EXAMINE_ENCOUNTER: 'SOCKET_EVENT.GAME.TO_CLIENT.EXAMINE_ENCOUNTER',
      MOVE_TO: 'SOCKET_EVENT.GAME.TO_SERVER.MOVE_TO',
      USE_ITEM: 'SOCKET_EVENT.GAME.TO_SERVER.USE_ITEM',
    },
  },

  DEBUG: {
    TO_CLIENT: {
      ADD_LOG: 'SOCKET_EVENT.DEBUG.TO_CLIENT.ADD_LOG',
      SET_TILE_EDITOR: 'SOCKET_EVENT.DEBUG.TO_CLIENT.SET_TILE_EDITOR',
      SET_MAP_HISTORY: 'SOCKET_EVENT.DEBUG.TO_CLIENT.SET_MAP_HISTORY',
    },
    TO_SERVER: {
      CONSOLE_COMMAND: 'SOCKET_EVENT.DEBUG.TO_SERVER.CONSOLE_COMMAND',
      RESTART_GAME: 'SOCKET_EVENT.DEBUG.TO_SERVER.RESTART_GAME',
      REQUEST_MAP_HISTORY: 'SOCKET_EVENT.DEBUG.TO_SERVER.REQUEST_MAP_HISTORY',
    },
  },
};
